// <auto-generated />
using System;
using DAO;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAO.Migrations
{
    [DbContext(typeof(TienThachContext))]
    [Migration("20230420035245_thach")]
    partial class thach
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_vietnamese_ci")
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("DAO.Entity.Admin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'1'");

                    b.Property<bool?>("Trash")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("trash")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime>("UpdatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("admin", (string)null);
                });

            modelBuilder.Entity("DAO.Entity.Brand", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Alias")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("alias");

                    b.Property<string>("BrandName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("brand_name");

                    b.Property<DateTime>("CreatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'1'");

                    b.Property<bool?>("Trash")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("trash")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime>("UpdatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("brand", (string)null);
                });

            modelBuilder.Entity("DAO.Entity.Cart", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("Productid")
                        .HasColumnType("bigint")
                        .HasColumnName("productid");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<double>("SubPrice")
                        .HasColumnType("double")
                        .HasColumnName("subPrice");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "Productid" }, "cart_product");

                    b.ToTable("cart", (string)null);
                });

            modelBuilder.Entity("DAO.Entity.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Alias")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("alias");

                    b.Property<string>("CatName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cat_name");

                    b.Property<DateTime>("CreatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<long?>("ParentCategory")
                        .HasColumnType("bigint")
                        .HasColumnName("parent_category");

                    b.Property<bool?>("Trash")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("trash")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime>("UpdatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ParentCategory" }, "FKaicb6e7sl98i1qgcisd5kjkbs");

                    b.ToTable("category", (string)null);
                });

            modelBuilder.Entity("DAO.Entity.Contact", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<DateTime>("CreatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<int?>("Email")
                        .HasColumnType("int")
                        .HasColumnName("email");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("title");

                    b.Property<bool?>("Trash")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("trash")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime>("UpdatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("contact", (string)null);
                });

            modelBuilder.Entity("DAO.Entity.Customer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<string>("Diachi")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("diachi");

                    b.Property<int?>("Email")
                        .HasColumnType("int")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("full_name");

                    b.Property<long?>("OrderId")
                        .HasColumnType("bigint")
                        .HasColumnName("order_id");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext")
                        .HasColumnName("phone");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'1'");

                    b.Property<bool?>("Trash")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("trash")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime>("UpdatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.HasIndex(new[] { "OrderId" }, "FKeu3atqr8ryloegtmbc4w9h63b");

                    b.HasIndex(new[] { "UserId" }, "FKj8dlm21j202cadsbfkoem0s58");

                    b.ToTable("customer", (string)null);
                });

            modelBuilder.Entity("DAO.Entity.Employee", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<int?>("Age")
                        .HasColumnType("int")
                        .HasColumnName("age");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("employee", (string)null);
                });

            modelBuilder.Entity("DAO.Entity.HibernateSequence", b =>
                {
                    b.Property<long?>("NextVal")
                        .HasColumnType("bigint")
                        .HasColumnName("next_val");

                    b.ToTable("hibernate_sequence", (string)null);
                });

            modelBuilder.Entity("DAO.Entity.Image", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<string>("Image1")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("image");

                    b.Property<string>("ImageName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("image_name");

                    b.Property<string>("Link")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("link");

                    b.Property<int?>("Position")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("position")
                        .HasDefaultValueSql("'1'");

                    b.Property<long?>("ProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("product_id");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("title");

                    b.Property<bool?>("Trash")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("trash")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime>("UpdatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ProductId" }, "FKgpextbyee3uk9u6o2381m7ft1");

                    b.ToTable("image", (string)null);
                });

            modelBuilder.Entity("DAO.Entity.Link", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("image");

                    b.Property<string>("Link1")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("link");

                    b.Property<int?>("Position")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("position")
                        .HasDefaultValueSql("'1'");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'1'");

                    b.Property<bool?>("Trash")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("trash")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime>("UpdatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("link", (string)null);
                });

            modelBuilder.Entity("DAO.Entity.Oder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("note");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("ReceiverName")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'1'");

                    b.Property<int?>("Total")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("total")
                        .HasDefaultValueSql("'0'");

                    b.Property<bool?>("Trash")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("trash")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime>("UpdatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("oder", (string)null);
                });

            modelBuilder.Entity("DAO.Entity.Orderdetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<long?>("OrderId")
                        .HasColumnType("bigint")
                        .HasColumnName("order_id");

                    b.Property<double?>("Price")
                        .HasColumnType("double")
                        .HasColumnName("price");

                    b.Property<int?>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("quantity")
                        .HasDefaultValueSql("'0'");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'1'");

                    b.Property<bool?>("Trash")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("trash")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime>("UpdatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "OrderId" }, "FKlsqxuwouem7wwcq9qm84ivwbv");

                    b.ToTable("orderdetail", (string)null);
                });

            modelBuilder.Entity("DAO.Entity.Page", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<DateTime>("CreatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("title");

                    b.Property<bool?>("Trash")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("trash")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime>("UpdatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("page", (string)null);
                });

            modelBuilder.Entity("DAO.Entity.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Alias")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("alias");

                    b.Property<long?>("BrandId")
                        .HasColumnType("bigint")
                        .HasColumnName("brand_id");

                    b.Property<long?>("CategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("category_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<string>("Detail")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("detail");

                    b.Property<string>("NameProduct")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name_product");

                    b.Property<double?>("Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("double")
                        .HasColumnName("price")
                        .HasDefaultValueSql("'0'");

                    b.Property<double?>("SalePrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("double")
                        .HasColumnName("sale_price")
                        .HasDefaultValueSql("'0'");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime>("UpdatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CategoryId" }, "FK1mtsbur82frn64de7balymq9s");

                    b.HasIndex(new[] { "BrandId" }, "FKs6cydsualtsrprvlf2bb3lcam");

                    b.ToTable("product", (string)null);
                });

            modelBuilder.Entity("DAO.Entity.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<string>("FullName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("full_name");

                    b.Property<string>("Pass")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("pass");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'1'");

                    b.Property<bool?>("Trash")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("trash")
                        .HasDefaultValueSql("'0'");

                    b.Property<DateTime>("UpdatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by");

                    b.Property<string>("UserName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("user_name");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("DAO.Entity.Cart", b =>
                {
                    b.HasOne("DAO.Entity.Product", "Product")
                        .WithMany("Carts")
                        .HasForeignKey("Productid")
                        .IsRequired()
                        .HasConstraintName("cart_product");

                    b.HasOne("DAO.Entity.User", "User")
                        .WithMany("Carts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAO.Entity.Category", b =>
                {
                    b.HasOne("DAO.Entity.Category", "ParentCategoryNavigation")
                        .WithMany("InverseParentCategoryNavigation")
                        .HasForeignKey("ParentCategory")
                        .HasConstraintName("FKaicb6e7sl98i1qgcisd5kjkbs");

                    b.Navigation("ParentCategoryNavigation");
                });

            modelBuilder.Entity("DAO.Entity.Customer", b =>
                {
                    b.HasOne("DAO.Entity.Oder", "Order")
                        .WithOne("Customer")
                        .HasForeignKey("DAO.Entity.Customer", "OrderId")
                        .HasConstraintName("FKeu3atqr8ryloegtmbc4w9h63b");

                    b.HasOne("DAO.Entity.User", "User")
                        .WithMany("Customers")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FKj8dlm21j202cadsbfkoem0s58");

                    b.Navigation("Order");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAO.Entity.Image", b =>
                {
                    b.HasOne("DAO.Entity.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FKgpextbyee3uk9u6o2381m7ft1");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DAO.Entity.Orderdetail", b =>
                {
                    b.HasOne("DAO.Entity.Oder", "Order")
                        .WithMany("Orderdetails")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FKlsqxuwouem7wwcq9qm84ivwbv");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DAO.Entity.Product", b =>
                {
                    b.HasOne("DAO.Entity.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .HasConstraintName("FKs6cydsualtsrprvlf2bb3lcam");

                    b.HasOne("DAO.Entity.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK1mtsbur82frn64de7balymq9s");

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DAO.Entity.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DAO.Entity.Category", b =>
                {
                    b.Navigation("InverseParentCategoryNavigation");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("DAO.Entity.Oder", b =>
                {
                    b.Navigation("Customer")
                        .IsRequired();

                    b.Navigation("Orderdetails");
                });

            modelBuilder.Entity("DAO.Entity.Product", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Images");
                });

            modelBuilder.Entity("DAO.Entity.User", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
